name: Versioning (manual)

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (no tag/publish)'
        required: false
        default: 'false'
      clean_conflicts:
        description: 'Auto-delete conflicting unreachable tag before release'
        required: false
        default: 'true'

jobs:
  semantic-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install release deps
        run: npm i --no-audit --no-fund
      - name: Pre-check and (optional) cleanup conflicting release tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          # Ensure local tags are up to date
          git fetch --tags --force --prune || true
          # Compute next version via dry-run
          NEXT=$(npx semantic-release --dry-run 2>&1 | sed -n "s/.*The next release version is \([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p" | tail -n1 || true)
          echo "Computed next version: $NEXT"
          if [ -n "$NEXT" ]; then
            # If a local tag with the next version exists but is not on current history, delete it to avoid local tag conflicts
            if git rev-parse -q --verify "refs/tags/v$NEXT" >/dev/null 2>&1; then
              TSHA=$(git rev-parse -q --verify "refs/tags/v$NEXT^{commit}" || true)
              if [ -n "$TSHA" ]; then
                if git merge-base --is-ancestor "$TSHA" HEAD; then
                  echo "Local tag v$NEXT exists and is on current history; leaving local tag (semantic-release should not target same version)."
                else
                  echo "Local tag v$NEXT exists but is not on current history; deleting local tag to avoid conflict."
                  git tag -d "v$NEXT" || true
                fi
              fi
            fi
            # Find remote tag commit SHA (peeled first)
            SHA=$(git ls-remote --tags origin "refs/tags/v$NEXT^{}" | awk '{print $1}')
            if [ -z "$SHA" ]; then
              SHA=$(git ls-remote --tags origin "refs/tags/v$NEXT" | awk '{print $1}')
            fi
            if [ -n "$SHA" ]; then
              echo "Remote tag v$NEXT exists at $SHA; checking reachability..."
              if git merge-base --is-ancestor "$SHA" HEAD; then
                echo "Tag is reachable from HEAD; leaving as-is."
              else
                if [ "${{ github.event.inputs.clean_conflicts }}" = "true" ]; then
                  echo "Tag exists but is not on current history; deleting to avoid semantic-release conflict."
                  git push origin :refs/tags/v$NEXT
                else
                  echo "Conflict detected (unreachable tag v$NEXT). Skipping deletion per input clean_conflicts=false." >&2
                fi
              fi
            fi
          fi
      - name: Semantic Release
        if: ${{ github.event.inputs.dry_run != 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run release
