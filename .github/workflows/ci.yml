name: CI/CD

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch: {}

permissions:
  contents: read
  pull-requests: read

jobs:
  commitlint:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Conventional Commits
        uses: wagoid/commitlint-github-action@v6

  pre-commit:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: false
      - name: Go format check
        run: |
          fmt_out=$(gofmt -l .)
          if [ -n "$fmt_out" ]; then
            echo "Found unformatted Go files:" && echo "$fmt_out" && exit 1
          fi
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=3m ./...
      - name: go vet
        run: go vet ./...
      - name: Go tests
        run: go test ./... -cover -coverprofile=coverage.out
      - name: Upload Go coverage
        uses: actions/upload-artifact@v4
        with:
          name: go-coverage
          path: coverage.out
      - name: Setup Node
        if: ${{ hashFiles('frontend/package.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: Install frontend deps
        if: ${{ hashFiles('frontend/package.json') != '' }}
        run: npm ci --prefix frontend
      - name: Type check (TS)
        if: ${{ hashFiles('frontend/package.json') != '' }}
        run: npm run typecheck --prefix frontend --if-present
      - name: Lint (ESLint)
        if: ${{ hashFiles('frontend/package.json') != '' }}
        run: npm run lint --prefix frontend --if-present
      - name: Frontend tests
        if: ${{ hashFiles('frontend/package.json') != '' }}
        run: npm test --prefix frontend --if-present -- --coverage

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Secret scan (gitleaks)
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Go vuln check
        uses: golang/govulncheck-action@v1
        with:
          go-version-input: 1.23
      - name: NPM audit (frontend)
        if: ${{ hashFiles('frontend/package.json') != '' }}
        run: npm audit --prefix frontend --audit-level=high

  build-preview:
    needs: [lint-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: false
      - name: Build backend
        run: |
          mkdir -p dist
          go build -o dist/synap ./cmd/server
      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: synap-backend
          path: dist/synap
      - name: Setup Node
        if: ${{ hashFiles('frontend/package.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: Build frontend
        if: ${{ hashFiles('frontend/package.json') != '' }}
        run: |
          npm ci --prefix frontend
          npm run build --prefix frontend
      - name: Upload frontend artifact
        if: ${{ hashFiles('frontend/package.json') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: synap-frontend
          path: frontend/dist

  smoke-test:
    needs: [build-preview]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: false
      - name: Build and run server
        run: |
          go build -o synap ./cmd/server
          SYNAP_ADDR=":8081" ./synap &
          SERVER_PID=$!
          for i in {1..20}; do
            if curl -fsS http://localhost:8081/health >/dev/null; then
              echo "Server responded"; break; fi; sleep 0.5; done
          curl -fsS http://localhost:8081/health | tee smoke.json
          kill $SERVER_PID
      - name: Upload smoke output
        uses: actions/upload-artifact@v4
        with:
          name: smoke-output
          path: smoke.json
