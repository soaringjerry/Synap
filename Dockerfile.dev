# syntax=docker/dockerfile:1

# Dev image: run backend and frontend dev servers in one container
FROM golang:1.23-bullseye AS dev
WORKDIR /workspace

# Install Node.js 20 (NodeSource)
RUN apt-get update && apt-get install -y curl ca-certificates gnupg && \
    curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get install -y nodejs && \
    npm --version && node --version && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Install air for Go hot reload
RUN go install github.com/cosmtrek/air@latest

COPY . .

# Create a simple Air config if absent (for cmd/server)
RUN test -f .air.toml || printf "root = .\n[build]\n  cmd = 'go build -o ./tmp/synap ./cmd/server'\n  bin = './tmp/synap'\n  include_ext = ['go']\n  exclude_dir = ['frontend','docs','examples','migrations','tests','.git']\n" > .air.toml

COPY scripts/dev-entry.sh /usr/local/bin/dev-entry.sh
RUN chmod +x /usr/local/bin/dev-entry.sh

EXPOSE 8080 3000
ENV SYNAP_ADDR=:8080

ENTRYPOINT ["/usr/local/bin/dev-entry.sh"]

