# syntax=docker/dockerfile:1

# Dev image: run backend and frontend dev servers in one container
FROM golang:1.23-alpine AS dev
WORKDIR /workspace

# Install Node.js + npm on Alpine (smaller dev image)
RUN apk add --no-cache nodejs npm bash curl ca-certificates && \
    node --version && npm --version

COPY . .

# Create a simple Air config if absent (for cmd/server)
RUN test -f .air.toml || printf "root = .\n[build]\n  cmd = 'go build -o ./tmp/synap ./cmd/server'\n  bin = './tmp/synap'\n  include_ext = ['go']\n  exclude_dir = ['frontend','docs','examples','migrations','tests','.git']\n" > .air.toml

COPY scripts/dev-entry.sh /usr/local/bin/dev-entry.sh
RUN chmod +x /usr/local/bin/dev-entry.sh

EXPOSE 8080 5173
ENV SYNAP_ADDR=:8080
ARG GIT_SHA
ARG BUILD_TIME
ENV SYNAP_COMMIT=${GIT_SHA}
ENV SYNAP_BUILD_TIME=${BUILD_TIME}

ENTRYPOINT ["/usr/local/bin/dev-entry.sh"]
